<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprUndefined</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cur = cr_default
global.guiHover = ""
global.windHover = ""
global.guiItemHover = false
global.guiTextHover = ""
global._guiChat = ds_list_create()
global._guiWind = ds_map_create()
global._guiDrag = ""
global._guiDrop = ""
global._guiDragX = 0
global._guiDragY = 0

guiChatMessage('GUI System loaded!', 'System', c_green)
win_mainmenu = ds_map_create()
ds_map_add(win_mainmenu, 'type', 'mainMenu')
ds_map_add(win_mainmenu, 'w', 300)
ds_map_add(win_mainmenu, 'title', 'Main menu')

_winEdit = ds_map_create()
ds_map_add(_winEdit, 'type', 'editEntity')
ds_map_add(_winEdit, 'w', 200)
ds_map_add(_winEdit, 'h', 300)

win_inventory = ds_map_create()
ds_map_add(win_inventory, 'type', 'inventory')
ds_map_add(win_inventory, 'w', 217)
ds_map_add(win_inventory, 'h', 320)
ds_map_add(win_inventory, 'title', 'Inventory')

win_character = ds_map_create()
ds_map_add(win_character, 'type', 'character')
ds_map_add(win_character, 'w', 221)
ds_map_add(win_character, 'h', 326)
ds_map_add(win_character, 'title', 'Character')

/*if global.edit {
    _winEditMenu = ds_map_create()
    ds_map_add(_winEditMenu, 'type', 'editMenu')
    ds_map_add(_winEditMenu, 'title', 'Edit map')
    ds_map_add(_winEditMenu, 'w', 100)
    ds_map_add(_winEditMenu, 'h', 120)
    guiWindowCreate('editmenu', _winEditMenu)
    with Map {event_user(0)} //Redraw
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//guiChatMessage('GUI test: ' + string(random(100000)), 'Test', c_purple)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global._guiDrop = global._guiDrag
global._guiDrag = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.edit &amp;&amp; string_copy(global.guiHover, 1, 3) == "map" {
    ds_map_replace(_winEdit, 'depth', current_time)
    var _obj = string_copy(global.guiHover, 5, string_length(global.guiHover) - 4)
    ds_map_replace(_winEdit, 'entity', _obj.entId)
    ds_map_replace(_winEdit, 'title', 'Edit entity "' + string(_obj.entId) + '"')
    guiWindowCreate('editentity', _winEdit)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(view_wport != ceil(window_get_width()) || view_hport != ceil(window_get_height())) {
    view_wport = ceil(window_get_width())
    view_hport = ceil(window_get_height())
    view_wview = view_wport//2
    view_hview = view_hport//2
    surface_resize(application_surface,view_wport,view_hport);
    display_set_gui_size(window_get_width(), window_get_height())
}

global.guiHover = "nan"
if global.mapHover &gt;0 global.guiHover = "map_" + string(global.mapHover)
if window_mouse_get_y() &gt;= display_get_gui_height() - 200 global.guiHover = "gui"
if global.windHover != "" global.guiHover = global.windHover
if string_copy(global._guiDrag, 1, 3) == "win" global.guiHover = global._guiDrag

switch(string_copy(global.guiHover, 1, 3)) {
    case "map":
    global.cur = cr_handpoint
    break;
    
    default:
    global.cur = cr_default
    break;
}


draw_set_font(fntMain)
draw_set_color(c_dkgray)
draw_rectangle(0, display_get_gui_height() - 200, display_get_gui_width(), display_get_gui_height(), 0)
var _x = 0
repeat(ceil(display_get_gui_width()/330)) {
    draw_sprite(guiBg, 0, _x, display_get_gui_height() - 200)
    _x+=330
}
guiDrawChat(0, display_get_gui_height() - 170, display_get_gui_width() - 200, display_get_gui_height())

draw_sprite(sprite3, 0, display_get_gui_width()-100, display_get_gui_height() - 100)

guiDrawWindows()

if window_get_cursor() != global.cur {
    window_set_cursor(global.cur)
}

if string_copy(global._guiDrag, 1, 3) == "inv" || string_copy(global._guiDrag, 1, 3) == "equ" {
    var _item = string_copy(global._guiDrag, 5, string_length(global._guiDrag) - 4)
    _item = mapGetDef(global.inventory, _item, false)
    draw_sprite_ext(mapGetDef(_item, 'icon', sprUndefined), 0, window_mouse_get_x() - 16, window_mouse_get_y() - 16, 1, 1, 0, c_white, 0.5)
}

if global.guiItemHover {
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
    draw_set_font(fntMain)
    draw_set_color(c_black)
    draw_set_alpha(0.95)
    var _item_name = mapGetDef(global.guiItemHover, 'name', 'Unnamed item');
    var _item_type = mapGetDef(global.guiItemHover, 'type', 'etc');
    equStats(global.guiItemHover)
    if mapGetDef(global.guiItemHover, 'stack', 1) &gt; 1 _item_name = "[" + string(mapGetDef(global.guiItemHover, 'stack', 1)) + "] " + _item_name
    var _item_text = mapGetDef(global.guiItemHover, 'text', 'No description.');
    var _h = 14 + string_height_ext(_item_text, 8, 200) + _item_stats * 14
    draw_rectangle(window_mouse_get_x() + 10, window_mouse_get_y() + 10, window_mouse_get_x() + 10 + 200, window_mouse_get_y() + 10 + _h, 0)
    draw_set_color(mapGetDef(global.guiItemHover, 'color', c_yellow))
    draw_set_alpha(1)
    draw_text(window_mouse_get_x() + 10, window_mouse_get_y() + 10, _item_name)
    draw_set_color(c_yellow)
    draw_set_halign(fa_right)
    draw_set_font(fntWindow)
    draw_text(window_mouse_get_x() + 208, window_mouse_get_y() + 10, _item_type)
    draw_set_halign(fa_left) 
    draw_set_color(c_ltgray)
    draw_text_ext(window_mouse_get_x() + 10, window_mouse_get_y() + 26, _item_text, 10, 200)
    var _i = 0
    repeat(_item_stats) {
        draw_set_color(c_green)
        if string_count('-', _item_stat[_i]) draw_set_color(c_red)
        draw_text(window_mouse_get_x() + 14, window_mouse_get_y() + _i * 14 + 10 + _h -  _item_stats * 14, _item_stat[_i])
        _i += 1
    }
    global.guiItemHover = false
}else if string_length(global.guiTextHover) &gt; 0 {
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
    draw_set_font(fntMain)
    draw_set_color(c_black)
    draw_set_alpha(0.95)
    var _w = string_width_ext(global.guiTextHover, 8, 200)
    var _h = string_height_ext(global.guiTextHover, 8, 200)
    draw_rectangle(window_mouse_get_x() + 14, window_mouse_get_y() + 14, window_mouse_get_x() + 18 + _w, window_mouse_get_y() + 18 + _h, false)
    draw_set_color(c_white)
    draw_text(window_mouse_get_x() + 16, window_mouse_get_y() + 16, global.guiTextHover)
    
    global.guiTextHover = ""
}

if global.debug {
    draw_set_color(c_black)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
    draw_set_alpha(0.4)
    draw_rectangle(0, 0, 120, 80, false)
    draw_set_alpha(1)
    draw_set_color(c_white)
    draw_text(0,0,"Fps: " + string(fps) + "/" + string(room_speed) + "#Hover: " + global.guiHover + "#Drag: " + global._guiDrag)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !guiWindowExists('win_inventory') {
    ds_map_replace(win_inventory, 'depth', current_time)
    guiWindowCreate('inventory', win_inventory)
}else {
    guiWindowClose('win_inventory')
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !guiWindowExists('win_character') {
    ds_map_replace(win_character, 'depth', current_time)
    guiWindowCreate('character', win_character)
}else {
    guiWindowClose('win_character')
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !guiWindowExists('win_mainmenu') {
    ds_map_replace(win_mainmenu, 'depth', current_time)
    guiWindowCreate('mainmenu', win_mainmenu)
}else {
    guiWindowClose('win_mainmenu')
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
